name: Seven Core Merge Review Agent

on:
  push:
    branches: [ merge-review ]
  pull_request:
    branches: [ main, merge-review ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to review'
        required: false
        default: 'merge-review'
      auto_merge:
        description: 'Auto-merge if approved'
        required: false
        default: 'false'
        type: boolean

jobs:
  merge-review:
    name: ü§ñ Automated Merge Review
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: üõ°Ô∏è Checkout Seven Core
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: üì¶ Setup Node.js Environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: üîß Install Dependencies
      run: |
        npm ci --production=false
        npm install -g tsx

    - name: üõ°Ô∏è Initialize Safety Systems
      run: |
        echo "Starting Seven safety systems..."
        timeout 30s npx tsx boot-seven.ts || echo "Boot completed"
        sleep 2

    - name: ü§ñ Run Merge Review Agent
      id: review
      run: |
        echo "branch=${{ github.event.inputs.branch || 'merge-review' }}" >> $GITHUB_OUTPUT
        
        # Run the merge review agent
        npx tsx scripts/agents/merge-review-agent.ts "${{ github.event.inputs.branch || 'merge-review' }}" | tee review-output.txt
        
        # Capture exit code
        echo "exit_code=$?" >> $GITHUB_OUTPUT

    - name: üìä Upload Review Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: merge-review-report
        path: review-output.txt
        retention-days: 30

    - name: üìù Comment Review Results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          let reviewOutput = '';
          
          try {
            reviewOutput = fs.readFileSync('review-output.txt', 'utf8');
          } catch (error) {
            reviewOutput = 'Review output not available';
          }

          const exitCode = ${{ steps.review.outputs.exit_code || 1 }};
          const approved = exitCode === 0;
          
          const commentBody = `
          ## ü§ñ Seven Core Merge Review Agent
          
          **Branch:** \`${{ steps.review.outputs.branch }}\`  
          **Status:** ${approved ? '‚úÖ **APPROVED**' : '‚ùå **REQUIRES ATTENTION**'}
          **Timestamp:** ${new Date().toISOString()}
          
          ### Review Output
          \`\`\`
          ${reviewOutput.slice(0, 2000)}${reviewOutput.length > 2000 ? '\n... (truncated)' : ''}
          \`\`\`
          
          ${approved 
            ? 'üéØ **Ready for merge** - All quality gates passed!' 
            : '‚ö†Ô∏è **Manual review required** - Please address issues above before merge.'
          }
          
          ---
          *Automated review by Seven of Nine Core Safety & Quality System*
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });

    - name: üöÄ Auto-merge if Approved
      if: |
        steps.review.outputs.exit_code == 0 && 
        github.event.inputs.auto_merge == 'true' &&
        github.event_name == 'workflow_dispatch'
      run: |
        echo "Review approved - performing auto-merge..."
        git config user.name "Seven Merge Agent"
        git config user.email "merge-agent@seven.core"
        
        # Switch to main and merge
        git checkout main
        git merge --no-ff ${{ steps.review.outputs.branch }} -m "ü§ñ Auto-merge: ${{ steps.review.outputs.branch }} ‚Üí main
        
        Automated merge approved by Seven Core Review Agent
        - All safety systems operational
        - All quality gates passed  
        - All tests passed
        
        Generated with Claude Code
        Co-Authored-By: Claude <noreply@anthropic.com>"
        
        git push origin main
        
        echo "‚úÖ Auto-merge completed successfully"

    - name: üö® Fail Build if Review Failed  
      if: steps.review.outputs.exit_code != 0
      run: |
        echo "‚ùå Merge review failed - build marked as failed"
        echo "Please address the issues identified by the review agent"
        exit 1

  # Optional: Clean up old artifacts
  cleanup:
    name: üßπ Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: always()
    needs: merge-review
    
    steps:
    - name: üóëÔ∏è Delete Old Artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 100
          });
          
          const oldArtifacts = artifacts.data.artifacts
            .filter(artifact => artifact.name === 'merge-review-report')
            .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
            .slice(10); // Keep latest 10
            
          for (const artifact of oldArtifacts) {
            try {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
              console.log(`Deleted old artifact: ${artifact.id}`);
            } catch (error) {
              console.log(`Could not delete artifact ${artifact.id}: ${error.message}`);
            }
          }