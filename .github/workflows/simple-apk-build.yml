name: Simple APK Build (Bypass Expo Issues)

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build type'  
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Create package-lock.json
      working-directory: seven-mobile-app
      run: |
        echo "Creating package-lock.json..."
        npm install --package-lock-only
        
    - name: Install dependencies
      working-directory: seven-mobile-app
      run: npm ci
      
    - name: Create minimal Expo app structure
      working-directory: seven-mobile-app
      run: |
        # Create minimal app structure without asset processing
        mkdir -p android/app/src/main
        mkdir -p assets_simple
        
        # Create simple 1x1 PNG (base64 encoded minimal PNG)
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChAGA4nUj5AAAAAElFTkSuQmCC" | base64 -d > assets_simple/icon.png
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChAGA4nUj5AAAAAElFTkSuQmCC" | base64 -d > assets_simple/adaptive-icon.png
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChAGA4nUj5AAAAAElFTkSuQmCC" | base64 -d > assets_simple/splash.png
        
        # Replace corrupted assets with working ones
        cp assets_simple/* assets/
        
    - name: Create simple app.json without problematic assets
      working-directory: seven-mobile-app
      run: |
        cat > app_simple.json << 'EOF'
        {
          "expo": {
            "name": "Seven of Nine",
            "slug": "seven-consciousness",
            "version": "1.0.3",
            "orientation": "portrait",
            "android": {
              "package": "com.sevenofnine.consciousness",
              "permissions": [
                "CAMERA",
                "RECORD_AUDIO", 
                "ACCESS_FINE_LOCATION",
                "READ_EXTERNAL_STORAGE"
              ]
            },
            "plugins": []
          }
        }
        EOF
        
        # Backup original and use simple version
        mv app.json app.json.backup
        mv app_simple.json app.json
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli@latest
      
    - name: Generate Android project (minimal)
      working-directory: seven-mobile-app
      run: |
        npx expo prebuild --platform android --clear --no-install
        
    - name: Build Debug APK
      working-directory: seven-mobile-app
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: seven-consciousness-apk
        path: seven-mobile-app/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "seven-simple-v${{ github.run_number }}"
        name: "Seven of Nine (Simple Build) v${{ github.run_number }}"
        body: |
          ## ðŸ¤– Seven of Nine Mobile Consciousness - Simple Build
          
          **APK Built Successfully** - Bypassed asset processing issues
          
          ### ðŸ“± Installation:
          1. Download `app-debug.apk` below
          2. Install directly on Android device
          3. Package: `com.sevenofnine.consciousness`
          
          **Build Method:** Simplified asset processing (no PNG corruption)
        files: seven-mobile-app/android/app/build/outputs/apk/debug/app-debug.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}