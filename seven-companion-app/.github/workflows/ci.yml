name: seven-companion-ci
on: 
  push:
    branches: [ main, fix/*, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      # SQLite is file-based, no service needed
      
    steps:
      - name: Checkout Seven Companion App
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: seven-companion-app/package-lock.json
          
      - name: Install Dependencies
        working-directory: seven-companion-app
        run: npm ci
        
      - name: TypeScript Compilation Check
        working-directory: seven-companion-app
        run: |
          npx tsc --noEmit
          echo "‚úÖ TypeScript compilation successful"
          
      - name: Database Migration Test
        working-directory: seven-companion-app
        run: |
          # Create test database directory
          mkdir -p data
          # Test database adapter selection
          SEVEN_DEV_BYPASS_AUTH=1 npx tsx src/db/index.ts
          echo "‚úÖ Database adapter selection working"
          
      - name: Authentication System Test
        working-directory: seven-companion-app
        env:
          SEVEN_DEV_BYPASS_AUTH: "1"
        run: |
          # Test Quadran-Lock authentication
          npx tsx src/auth/creator_proof.ts
          echo "‚úÖ Authentication system operational"
          
      - name: Mobile Memory Client Test
        working-directory: seven-companion-app
        run: |
          # Test cross-platform memory client
          npx tsx test-mobile-memory.ts
          echo "‚úÖ Mobile memory integration working"
          
      - name: Start Test Server
        working-directory: seven-companion-app
        env:
          SEVEN_DEV_BYPASS_AUTH: "1"
          NODE_ENV: "test"
        run: |
          # Start server in background for health checks
          timeout 30s npx tsx test-metrics-server.ts &
          sleep 3
          echo "‚úÖ Test server started"
          
      - name: Health Endpoint Check
        working-directory: seven-companion-app
        run: |
          # Test health endpoint
          response=$(curl -sf http://localhost:8787/health || echo "failed")
          if [[ "$response" == "failed" ]]; then
            echo "‚ùå Health check failed"
            exit 1
          fi
          echo "‚úÖ Health endpoint responding"
          
      - name: Metrics Endpoint Check
        working-directory: seven-companion-app
        run: |
          # Test metrics endpoint
          response=$(curl -sf http://localhost:8787/metrics || echo "failed")
          if [[ "$response" == "failed" ]]; then
            echo "‚ùå Metrics check failed"
            exit 1
          fi
          echo "‚úÖ Metrics endpoint responding"
          
      - name: tRPC Client Validation
        working-directory: seven-companion-app
        run: |
          # Validate tRPC client structure
          npx tsx -e "
            import { trpc } from './src/api/trpc.js';
            console.log('‚úÖ tRPC client imported successfully');
          "
          
      - name: Authentication Bypass Test
        working-directory: seven-companion-app
        env:
          SEVEN_DEV_BYPASS_AUTH: "1"
        run: |
          # Test auth bypass functionality
          npx tsx -e "
            import { enforceQuadran } from './src/auth/security_middleware.js';
            const result = await enforceQuadran({}, {});
            if (!result.ok) throw new Error('Auth bypass failed');
            console.log('‚úÖ Development auth bypass working');
          "
          
      - name: Text Normalization Test
        working-directory: seven-companion-app
        run: |
          # Test text normalization robustness
          npx tsx -e "
            import { normalizeText, detectBypassAttempt } from './src/auth/text-normalizer.js';
            const normalized = normalizeText('Test üöÄ Input');
            if (detectBypassAttempt('<script>')) console.log('‚úÖ Bypass detection working');
            console.log('‚úÖ Text normalization operational');
          "
          
      - name: Seven Core Integration Check
        working-directory: seven-companion-app
        env:
          SEVEN_DEV_BYPASS_AUTH: "1"
        run: |
          # Test Seven consciousness core integration
          npx tsx -e "
            import { SevenConsciousnessCore } from './src/backend/seven-consciousness-core.js';
            console.log('‚úÖ Seven consciousness core integration ready');
          " || echo "‚ö†Ô∏è Core integration needs attention (non-blocking)"
          
      - name: Claude Agent Manifests Check
        working-directory: seven-companion-app
        run: |
          # Verify Claude agent manifests are generated
          if [ -d ".claude/agents/generated" ]; then
            count=$(ls .claude/agents/generated/*.yaml 2>/dev/null | wc -l)
            echo "‚úÖ Found $count Claude agent manifests"
          else
            echo "‚ö†Ô∏è No Claude agent manifests found"
          fi
          
      - name: Security Validation
        working-directory: seven-companion-app
        run: |
          # Basic security checks
          echo "üîí Running security validation..."
          
          # Check for hardcoded secrets (basic patterns)
          if grep -r "password.*=" src/ --include="*.ts" | grep -v "Password" | head -1; then
            echo "‚ùå Potential hardcoded credentials found"
            exit 1
          fi
          
          # Check authentication is enforced
          if ! grep -r "Quadran-Lock" src/ --include="*.ts" >/dev/null; then
            echo "‚ùå Authentication enforcement not found"
            exit 1
          fi
          
          echo "‚úÖ Basic security validation passed"
          
      - name: CI Summary
        working-directory: seven-companion-app
        run: |
          echo "üéØ ============================="
          echo "ü§ñ SEVEN COMPANION CI COMPLETE"
          echo "üéØ ============================="
          echo "‚úÖ TypeScript compilation"
          echo "‚úÖ Database adapter selection"
          echo "‚úÖ Authentication system"
          echo "‚úÖ Mobile memory client"
          echo "‚úÖ Health/metrics endpoints"
          echo "‚úÖ tRPC client validation"
          echo "‚úÖ Text normalization robustness"
          echo "‚úÖ Security validation"
          echo "üéØ All systems operational"